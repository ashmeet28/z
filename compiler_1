u8 c

# Temporary values
u32 t0 t1 t2

# Arguments (not saved)
u32 a0 a1

# Saved values
u32 s0 s1

u32 return_value

u32 heap_pointer
u32 stack_pointer


start:
  stack_pointer = 0x81_ff_ff_ff
  heap_pointer = 0x81_00_00_00

stack_push:
  t0 = 0x4
  *stack_pointer = s0
  stack_pointer = stack_pointer - t0
  *stack_pointer = s1
  stack_pointer = stack_pointer - t0
  return

stack_pop:
  t0 = 0x4
  s1 = *stack_pointer
  stack_pointer = stack_pointer + t0
  s0 = *stack_pointer
  stack_pointer = stack_pointer + t0
  return

# (Size)
heap_allocate:
  return_value = heap_pointer
  heap_pointer = heap_pointer + a0

  # Align heap pointer
  t0 = 0x3
  t0 = heap_pointer & t0
  t1 = 0x0
  if t0 != t1
    t0 = 0x4
    heap_pointer = heap_pointer + t0
    t0 = 0xff_ff_ff_fc
    heap_pointer = heap_pointer & t0
  endif

  return

