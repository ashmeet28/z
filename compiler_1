u8 c

# Temporary values
u32 a_t b_t c_t

# Arguments (not saved)
u32 a_a b_a

# Saved values
u32 a_s b_s

u32 return_value

u32 heap_pointer
u32 stack_pointer


start:
  stack_pointer = 0x81_ff_ff_ff
  heap_pointer = 0x81_00_00_00

stack_push:
  a_t = 0x4
  *stack_pointer = a_s
  stack_pointer = stack_pointer - a_t
  *stack_pointer = b_s
  stack_pointer = stack_pointer - a_t
  return

stack_pop:
  a_t = 0x4
  b_s = *stack_pointer
  stack_pointer = stack_pointer + a_t
  a_s = *stack_pointer
  stack_pointer = stack_pointer + a_t
  return

# (Size)
heap_allocate:
  return_value = heap_pointer
  heap_pointer = heap_pointer + a_a

  # Align heap pointer
  a_t = 0x3
  a_t = heap_pointer & a_t
  b_t = 0x0
  if a_t != b_t
    a_t = 0x4
    heap_pointer = heap_pointer + a_t
    a_t = 0xff_ff_ff_fc
    heap_pointer = heap_pointer & a_t
  endif

  return

